# CREATE A *HOME* DIRECTORY CONTAIN THIS DATA PREP WORK
mkdir /scratch/west/NODAL/

# MAKE A *SCRATCH* DIRECTORY TO STORE LARGE VOLUMES OF WAVEFORMS
mkdir /scratch/west/500sps
ln -s /scratch/west/500sps 500sps

# SOURCE ANTELOPE
#(only needed once when you open a new window)
source /opt/antelope/5.11/setup.sh

# MASSAGE MINISEED FILES INTO A DIFFERENT STRUCTURE
# data are currently stored is a single folder(!) with hour-long files. Each file contains all three components. 
# The filenames are also problematically large. miniseed2days is a tool for restructuring the the data files. We 
# are moving the data into daylong files, with a seperate file for each component, organize in day folders. The 
# file naming convention in NET_STA_CHAN_LOC 
# dates range from 2019-02-11 to 2019-03-26
# filename format: /scratch/naalexeev/NODAL/[STARTTIME].[ENDTIME].[STATION].mseed

miniseed2days -k -w "500sps/%Y_%m_%d/%{net}_%{sta}_%{chan}.msd" /scratch/naalexeev/NODAL/2019-02-11T*.mseed  
miniseed2days -k -w "500sps/%Y_%m_%d/%{net}_%{sta}_%{chan}.msd" /scratch/naalexeev/NODAL/*116?.mseed 

#For missing data: 
miniseed2days -k -w "50sps_check/%Y_%m_%d/%{net}_%{sta}_%{chan}.msd" /scratch/irseppi/check/2019_03_01/129*_DP2_2019_03_01.mseed

#Automated for March:
for FILE in /scratch/naalexeev/NODAL/2019-03-??T*.mseed; do miniseed2days -k -w "500sps/%Y_%m_%d/%{net}_%{sta}_%{chan}.msd" $FILE; done;

# CREATE A DATABASE THAT POINTS TO ALL OF THESE FILES
rm -rf dbnodal*
miniseed2db 500sps dbnodal

#For 50sps
rm -rf dbnodal_downsampled*
miniseed2db 50sps dbnodal_downsampled

# EXAMINE CONTENTS OF DATABASE
# dbe for 'database explorer'
# waveforms are indexed in the .wfdisc table
dbe dbnodal


# VIEW DATA IN TRACEVIEW
# see /home/west/BARRY/CHEAT.txt for some traceview commands 
traceview -nfsok dbnodal				cd 	# basic
traceview -nfsok -sc '*:DPZ' -pf mytraceview dbnodal		# with features

# TRACEVIEW COMMANDS TO EXPERIMENT WITH ...
traces:*:DPZ order

tw 300
ts 2019-02-11 23:00
traces scale fixed -5000 5000

traces color_background #000000
traces color #FF0000
traces linewidth 2

control-down & control-up
control-shift-select

#Only get traces with arrival picks
traces stad on
fit
traces:selected filter BW 10 4 20 4 ; ABS ; AVE 1 0 #ENV
traces:selected filter BW 20 4 50 4 ; ABS ; AVE 1 0 #ENV

#####################################
# TO ADD WAVEFORMS FOR A NEW        #
# STATION TO AN EXISTING DB        #
#####################################

# CREATE LOCAL LINK TO 2019 ARCHIVE
ln -s /aec/db/waveforms/2019 2019

# START WITH FRESH FILES
rm -rf tmpdb*

# CREATE A WFDISC TABLE OF ADDITIONAL STATIONS
miniseed2db /aec/wf/2019/0[45678]*/*M22K.BH?.* tmpdb
miniseed2db /aec/wf/2019/0[45678]*/FAPT.HH?.* tmpdb
miniseed2db /aec/wf/2019/0[45678]*/NEA2.BH?.* tmpdb
miniseed2db /aec/wf/2019/0[45678]*/*I23K.BH?.* tmpdb
miniseed2db /aec/wf/2019/0[45678]*/FPAP.HH?.* tmpdb
miniseed2db /aec/wf/2019/0[45678]*/CUT.BH?.* tmpdb
miniseed2db /aec/wf/2019/0[45678]*/F1TN.HH?.* tmpdb
miniseed2db /aec/wf/2019/0[45678]*/RND.BH?.* tmpdb
miniseed2db /aec/wf/2019/0[45678]*/F2TN.HH?.* tmpdb
miniseed2db /aec/wf/2019/0[45678]*/MCK.BH?.* tmpdb
miniseed2db /aec/wf/2019/0[45678]*/F3TN.HH?.* tmpdb
miniseed2db /aec/wf/2019/0[45678]*/BWN.BH?.* tmpdb
miniseed2db /aec/wf/2019/0[45678]*/F4TN.HH?.* tmpdb
miniseed2db /aec/wf/2019/0[45678]*/F5MN.HH?.* tmpdb
# ... repeat to add all stations of interest ...

# download infrasound from IRIS and follow the same processes as here

# COMBINE THE NEW DB WITH AN EXISTING DB
cat dbnodal_downsampled.wfdisc tmpdb.wfdisc > dbnodal_downsampled_plus.wfdisc

# IT'S THAT EASY!

### MISC ###
https://brtt.com/wp-content/uploads/2020/09/Trilby_Cox_-_Traceview_a_users_introduction.pdf
file:///opt/antelope/5.11/html/traceview.1.html

db = dbsubset(db,'cha=="DPZ" && sta=="10.*,11.*,12.*,13.*")
dbnodal_all = dbsubset(dbnodal_all,'cha=="DPZ" && sta=="10.*,11.*,12.*,13.*"')
dbnodal_all = dbsubset(dbnodal_all,'cha=="DPZ" && sta=="10.*" && sta=="11.*" && sta=="12.*" && sta=="13.*"');
awk 'NR % 3 == 0' nodal_part.site

### STARTUP ###
traceview -nfsok -sc 'BAW:BHZ,BAT:BHZ,BAE:BHZ,PWL:BHZ,KNK:BHZ,GLI:BHZ,K24K:BHZ,M27K:BHZ,L18K:BHZ' -ts '10/05/2020 05:00' /aec/db/waveforms/2020_10/waveforms_2020_10_05

### NAVIGATION ###
ts 
tw

### TRACES ###
# the traces command contains a *ton* of complicated but powerful syntax
traces dup
traces scale auto
traces scale auto0
traces scale autop
traces scale auton
traces gain 2
traces scale fixed -50 50
traces fixed atop
traces fixed abottom
traces:*:BHZ.* 
traces:*:SHZ.* filter TPAD 20 BW 0.5 4 6 4 #0.5-6Hz
traces:BAW:BHZ,BAT:BHZ,BAE:BHZ,PWL:BHZ,KNK:BHZ,GLI:BHZ,N19K:BHZ,K24K:BHZ,BARN:BHZ,M27K:BHZ,L18K:BHZ,J17K:BHZ  order
trace maximum 30

### COLORS ###
traces color_background #FFFFFF
traces color #000000
traces linewidth 2

### FILTERS ###
from man wffil
BW 0.8 4 3.0 4 ; INT ; SQ ; AVE 10.0 0.0 ; SQRT

#To get every 10th station you could use some clever wildcarding
#Antelope uses a period  . to wildcard a single character and .* wildcard multiple characters

#load only stations ending in 9:
traceview -nfsok -sc '.*9:DPZ' 

#cleaner way to do this is to select this subset once traceview is open, in the command window in the right side panel 
#two things to know about traceview commands: (1) they are extremely powerful and configurable, and (2) the syntax will make you want to cry
traces:.*9:DPZ

#workflow: keep a text file of useful traceview commands written for a project 
#alter, cut and paste them into the window as needed
/home/west/BARRY/CHEAT.txt

#traceview man page
#browser-based format is easier to navigate
file:///opt/antelope/5.11/html/traceview.1.html

#tool on your command line called inspect_detection used for tuning sta/lta detection
#way to help figure out how to bend dbdetect to your wishes
#can configure everything in the GUI
inspect_detection yourDB
#or preload some fields (see the man page)
inspect_detection -sta 1048 -chan DPZ -tstart "2019/03/08 4:10" -twin 600 yourDB

#as in traceview, possible to feed in arbitrarily complex filter strings:
BW 1 4 10 4 ; ABS ; AVE 3 0

#full set of filter options under:
man wffilave
man wffilbrtt
   
#do NOT feed envelopes into the dbdetect sta/lta algorithm. The STA and LTA are literally envelope functions
#want a long LTA (probably 60 seconds or more) and an STA that is just long enough to introduce some smoothing

#use the threshold-on and threshold-off parameters to estimate a start and end time of the signal
#The on and off labels mark the period during which the sta/lta is above the designated thresholds

From Sarah Noel:
traceview -nfsok -sc 'KNK' /aec/db/waveforms/2023_06/waveforms_2023_06_06

#traceview call command to limit the time window, manual might have the necessary flags
#-sc flag is where you designate the station and channel selections manually 
#order that you list the stations is the order that they will appear in the view window

#For two stations with only the broadband vertical component:
-sc 'PWL:BHZ,KNK:BHZ'

#For two stations with all available broadband components:
-sc 'PWL:BH.,KNK:BH.'  (Note that "." is the wildcard option in antelope)

#To see data from 06/06
traceview -nfsok -sc  'MCK:BHZ,RND:BHZ,CUT:BHZ,BWN:BHZ,WRH:BHZ,CCB:BHZ,COLA:BHZ' /aec/db/waveforms/2023_06/waveforms_2023_06_06
traceview -nfsok 'MCK:BHZ, RND:BHZ, CUT:BHZ, BWN:BHZ, WRH:BHZ, CCB:BHZ, COLA:BHZ, SSN:BHZ, MS02:BHZ, L22K:BHZ, WAT7:BHZ, WAT1:BHZ, SKN:BHZ, DHY:BHZ, FA12:BHZ, NEA2:BHZ, TRF:BHZ' /aec/db/waveforms/2023_06/waveforms_2023_06_06
